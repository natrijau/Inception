| ðŸ§± Mot-clÃ©      | ðŸ’¡ Exemple concret                                                                |   |                                     |
| --------------- | --------------------------------------------------------------------------------- | - | ----------------------------------- |
| **FROM**        | `FROM node:20-alpine` â€“ commence une image lÃ©gÃ¨re avec Node.js 20 prÃ©installÃ©     |   |                                     |
| **RUN**         | `RUN apt-get update && apt-get install -y git` â€“ installe Git                     |   |                                     |
| **CMD**         | `CMD ["npm", "start"]` â€“ lance une app Node par dÃ©faut                            |   |                                     |
| **ENTRYPOINT**  | `ENTRYPOINT ["docker-entrypoint.sh"]` â€“ toujours exÃ©cutÃ©, mÃªme avec des arguments |   |                                     |
| **WORKDIR**     | `WORKDIR /usr/src/app` â€“ positionne le dossier courant                            |   |                                     |
| **COPY**        | `COPY . .` â€“ copie tout le dossier local dans l'image                             |   |                                     |
| **ADD**         | `ADD https://site.com/file.zip /src/` â€“ tÃ©lÃ©charge et ajoute un fichier distant   |   |                                     |
| **LABEL**       | `LABEL version="1.0" maintainer="zitoune@42.fr"` â€“ info sur lâ€™image               |   |                                     |
| **ENV**         | `ENV PORT=3000` â€“ crÃ©e une variable dâ€™environnement                               |   |                                     |
| **ARG**         | `ARG BUILD_VERSION=1.0` â€“ accessible uniquement pendant le build                  |   |                                     |
| **EXPOSE**      | `EXPOSE 8080` â€“ indique que l'app Ã©coute sur ce port                              |   |                                     |
| **VOLUME**      | `VOLUME /data` â€“ dÃ©clare un volume persistant                                     |   |                                     |
| **USER**        | `USER node` â€“ change d'utilisateur dans le conteneur                              |   |                                     |
| **ONBUILD**     | `ONBUILD RUN npm install` â€“ dÃ©clenche `npm install` dans lâ€™image fille            |   |                                     |
| **SHELL**       | `SHELL ["/bin/bash", "-c"]` â€“ passe de `sh` Ã  `bash` pour les commandes           |   |                                     |
| **HEALTHCHECK** | \`HEALTHCHECK CMD curl -f [http://localhost](http://localhost)                    |   | exit 1\` â€“ vÃ©rifie que lâ€™app tourne |
| **STOPSIGNAL**  | `STOPSIGNAL SIGINT` â€“ change le signal dâ€™arrÃªt par dÃ©faut                         |   |                                     |
